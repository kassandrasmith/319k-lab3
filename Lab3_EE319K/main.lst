


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Kassandra Smith and Madhumitha Ven
                       kataraman
    3 00000000         ; Date Created: 2/17/2015 
    4 00000000         ; Last Modified: 2/21/2015 
    5 00000000         ; Section Tue 4-5pm     TA: Jenny Chen
    6 00000000         ; Lab number: 3
    7 00000000         ; Brief description of the program
    8 00000000         ;   If the switch is presses, the LED toggles at 8 Hz
    9 00000000         ; Hardware connections
   10 00000000         ;  PE0 is switch input  (1 means pressed, 0 means not pr
                       essed)
   11 00000000         ;  PE1 is LED output (1 activates external LED on protob
                       oard) 
   12 00000000         ;Overall functionality of this system is the similar to 
                       Lab 2, with five changes:
   13 00000000         ;1-  the pin to which we connect the switch is moved to 
                       PE0, 
   14 00000000         ;2-  you will have to remove the PUR initialization beca
                       use pull up is no longer needed. 
   15 00000000         ;3-  the pin to which we connect the LED is moved to PE1
                       , 
   16 00000000         ;4-  the switch is changed from negative to positive log
                       ic, and 
   17 00000000         ;5-  you should increase the delay so it flashes about 8
                        Hz.
   18 00000000         ; Operation
   19 00000000         ; X 1) Make PE1 an output and make PE0 an input. 
   20 00000000         ; X 2) The system starts with the LED on (make PE1 =1). 
                       
   21 00000000         ; X  3) Wait about 62 ms
   22 00000000         ; X 4) If the switch is pressed (PE0 is 1), then toggle 
                       the LED once, else turn the LED on. 
   23 00000000         ; X  5) Steps 3 and 4 are repeated over and over
   24 00000000         
   25 00000000         
   26 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   27 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   28 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   29 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   30 00000000 40024528 
                       GPIO_PORTE_AMSEL_R
                               EQU              0x40024528
   31 00000000 4002452C 
                       GPIO_PORTE_PCTL_R
                               EQU              0x4002452C
   32 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   33 00000000 40025520 
                       GPIO_PORTE_LOCK_R



ARM Macro Assembler    Page 2 


                               EQU              0x40025520
   34 00000000 40025524 
                       GPIO_PORTE_CR_R
                               EQU              0x40025524
   35 00000000         
   36 00000000         
   37 00000000                 IMPORT           TExaS_Init
   38 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   39 00000000                 THUMB
   40 00000000                 EXPORT           Start
   41 00000000         Start
   42 00000000         ; TExaS_Init sets bus clock at 80 MHz
   43 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   44 00000004         ; you initialize PE1 PE0
   45 00000004         
   46 00000004         
   47 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   48 00000006         ;Enable the clock for the port,
   49 00000006         ;Initialize clock,
   50 00000006 4927            LDR              R1, =SYSCTL_RCGCGPIO_R 
                                                            ;activate clock
   51 00000008 6808            LDR              R0, [R1]
   52 0000000A F040 0030       ORR              R0, R0, #0x30 ;set bit 4 to tur
                                                            n on clock
   53 0000000E 6008            STR              R0, [R1]    ;put it back
   54 00000010 BF00            NOP                          ;wait for stabiliza
                                                            tion,
   55 00000012 BF00            NOP
   56 00000014 4924            LDR              R1, =GPIO_PORTE_LOCK_R ;unlock 
                                                            the lock register
   57 00000016 4825            LDR              R0, =0x4C4F434B ;unlock GPIO Po
                                                            rt E Commit Registe
                                                            r
   58 00000018 6008            STR              R0, [R1]
   59 0000001A 4925            LDR              R1, =GPIO_PORTE_CR_R ;enable co
                                                            mmit for Port E
   60 0000001C F04F 00FF       MOV              R0, #0xFF   ;1 means allow acce
                                                            ss
   61 00000020 6008            STR              R0, [R1]
   62 00000022 4924            LDR              R1, =GPIO_PORTE_AMSEL_R ;disabl
                                                            e analog functional
                                                            ity
   63 00000024 6808            LDR              R0, [R1]
   64 00000026 F020 0003       BIC              R0, #0x03   ;Clear bits 1 and 0
                                                            
   65 0000002A 6008            STR              R0, [R1]
   66 0000002C 4922            LDR              R1, =GPIO_PORTE_PCTL_R 
                                                            ;configure as GPIO
   67 0000002E 6808            LDR              R0, [R1]
   68 00000030 F020 0014       BIC              R0, #0x14   ;0 means configure 
                                                            Port E as GPIO
   69 00000034 6008            STR              R0, [R1]
   70 00000036 4921            LDR              R1, =GPIO_PORTE_DIR_R ;set dire
                                                            ction register
   71 00000038 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 3 


   72 0000003A F040 0002       ORR              R0,#0x02    ;PORTE bit 1 is set
                                                             to 1
   73 0000003E F020 0001       BIC              R0,#0x01    ;clear bit 0
   74 00000042 6008            STR              R0, [R1]
   75 00000044 491E            LDR              R1, =GPIO_PORTE_AFSEL_R ;disabl
                                                            e alternate functio
                                                            n select
   76 00000046 6808            LDR              R0, [R1]
   77 00000048 F020 0014       BIC              R0, #0x14   ;We don't need the 
                                                            pins' special funct
                                                            ions so we set it t
                                                            o 0
   78 0000004C 6008            STR              R0, [R1]
   79 0000004E 491D            LDR              R1, =GPIO_PORTE_DEN_R ;Set DEN 
                                                            so that the bits ar
                                                            e useable, Port E d
                                                            igital port
   80 00000050 6808            LDR              R0, [R1]
   81 00000052 F040 00FF       ORR              R0, #0xFF   ;1 enables digital 
                                                            I/O
   82 00000056 6008            STR              R0, [R1]
   83 00000058 491B            LDR              R1, =GPIO_PORTE_DATA_R
   84 0000005A 6808            LDR              R0, [R1]
   85 0000005C F040 0002       ORR              R0, #0x02   ;starting the progr
                                                            am with the LED on
   86 00000060 6008            STR              R0, [R1]
   87 00000062 F005 0500       AND              R5, R5, #0  ;clearing register 
                                                            5, to be used as co
                                                            unter for delay
   88 00000066         loop
   89 00000066 F505 7579       ADD              R5, #996    ;
   90 0000006A FB05 F505       MUL              R5, R5
   91 0000006E         delay                                ;delay function
   92 0000006E F105 35FF       ADD              R5, #-1     ;subtract one from 
                                                            R5      ;1 clk cycl
                                                            e
   93 00000072 2D00            CMP              R5, #0      ;if R5 greater than
                                                             zero, branch to de
                                                            lay 
   94 00000074         
   95 00000074 DCFB            BGT              delay       ;if R5 is equal to 
                                                            zero, proceed    ;1
                                                             clk cycle
   96 00000076         
   97 00000076 4A14            LDR              R2, =GPIO_PORTE_DATA_R
   98 00000078 4E13            LDR              R6, =GPIO_PORTE_DATA_R
   99 0000007A         
  100 0000007A 6836            LDR              R6, [R6]    ;load data from Por
                                                            t E
  101 0000007C         
  102 0000007C F006 0601       AND              R6, #0x01   ;masking for bit 0
  103 00000080 2E01            CMP              R6, #0x01   ;check and see is b
                                                            it 0 is "1" (switch
                                                             not pressed)
  104 00000082 D107            BNE              turnon      ;if switch is not p
                                                            ressed, take the br
                                                            anch
  105 00000084 4E10            LDR              R6, =GPIO_PORTE_DATA_R
  106 00000086 6836            LDR              R6, [R6]    ;load data from Por



ARM Macro Assembler    Page 4 


                                                            t E
  107 00000088 F006 0602       AND              R6, #0x02   ;masking for bit 1
  108 0000008C F086 0602       EOR              R6, R6, #0x2 ;NOT bit 1
  109 00000090 6016            STR              R6, [R2]    ;store result back 
                                                            to Port E
  110 00000092 E7E8            B                loop        ;Branch back to beg
                                                            inning of loop
  111 00000094         turnon                               ;turning or keeping
                                                             the LED on
  112 00000094 490C            LDR              R1, =GPIO_PORTE_DATA_R
  113 00000096 4A0C            LDR              R2, =GPIO_PORTE_DATA_R
  114 00000098 6809            LDR              R1, [R1]    ;load data from Por
                                                            t E
  115 0000009A F041 0102       ORR              R1, #0x02   ;set bit 1 to "1"
  116 0000009E 6011            STR              R1, [R2]    ;store result back 
                                                            to Port E
  117 000000A0         ;end subroutine
  118 000000A0 E7E1            B                loop
  119 000000A2         
  120 000000A2         
  121 000000A2         
  122 000000A2         
  123 000000A2 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  124 000000A4                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40024528 
              4002452C 
              40024400 
              40024420 
              4002451C 
              400243FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__RTX SETA 1" --predefine="__EVAL SETA 1" --list=.\main
.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 41 in file main.s
   Uses
      At line 40 in file main.s
Comment: Start used once
delay 0000006E

Symbol: delay
   Definitions
      At line 91 in file main.s
   Uses
      At line 95 in file main.s
Comment: delay used once
loop 00000066

Symbol: loop
   Definitions
      At line 88 in file main.s
   Uses
      At line 110 in file main.s
      At line 118 in file main.s

turnon 00000094

Symbol: turnon
   Definitions
      At line 111 in file main.s
   Uses
      At line 104 in file main.s
Comment: turnon used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 28 in file main.s
   Uses
      At line 75 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_AMSEL_R 40024528

Symbol: GPIO_PORTE_AMSEL_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 62 in file main.s
Comment: GPIO_PORTE_AMSEL_R used once
GPIO_PORTE_CR_R 40025524

Symbol: GPIO_PORTE_CR_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 59 in file main.s
Comment: GPIO_PORTE_CR_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 26 in file main.s
   Uses
      At line 83 in file main.s
      At line 97 in file main.s
      At line 98 in file main.s
      At line 105 in file main.s
      At line 112 in file main.s
      At line 113 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 29 in file main.s
   Uses
      At line 79 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 70 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_LOCK_R 40025520

Symbol: GPIO_PORTE_LOCK_R
   Definitions
      At line 33 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 56 in file main.s
Comment: GPIO_PORTE_LOCK_R used once
GPIO_PORTE_PCTL_R 4002452C

Symbol: GPIO_PORTE_PCTL_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 66 in file main.s
Comment: GPIO_PORTE_PCTL_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 50 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 37 in file main.s
   Uses
      At line 43 in file main.s
Comment: TExaS_Init used once
1 symbol
349 symbols in table
