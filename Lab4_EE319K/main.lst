


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: put your names here
    3 00000000         ; Date Created: 1/24/2015 
    4 00000000         ; Last Modified: 1/24/2015 
    5 00000000         ; Section 1-2pm     TA: Wooseok Lee
    6 00000000         ; Lab number: 4
    7 00000000         ; Brief description of the program
    8 00000000         ;   If the switch is presses, the LED toggles at 8 Hz
    9 00000000         ; Hardware connections
   10 00000000         ;  PE0 is switch input  (1 means pressed, 0 means not pr
                       essed)
   11 00000000         ;  PE1 is LED output (1 activates external LED on protob
                       oard) 
   12 00000000         ;Overall functionality of this system is the similar to 
                       Lab 3, with four changes:
   13 00000000         ;1-  activate the PLL to run at 80 MHz (12.5ns bus cycle
                        time) 
   14 00000000         ;2-  initialize SysTick with RELOAD 0x00FFFFFF 
   15 00000000         ;3-  add a heartbeat to PF2 that toggles every time thro
                       ugh loop 
   16 00000000         ;4-  add debugging dump of input, output, and time
   17 00000000         ; Operation
   18 00000000         ; 1) Make PE1 an output and make PE0 an input. 
   19 00000000         ; 2) The system starts with the LED on (make PE1 =1). 
   20 00000000         ;   3) Wait about 62 ms
   21 00000000         ;   4) If the switch is pressed (PE0 is 1), then toggle 
                       the LED once, else turn the LED on. 
   22 00000000         ;   5) Steps 3 and 4 are repeated over and over
   23 00000000         
   24 00000000         
   25 00000000 40024004 
                       SWITCH  EQU              0x40024004  ;PE0
   26 00000000 40024008 
                       LED     EQU              0x40024008  ;PE1
   27 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   28 00000000 00000010 
                       SYSCTL_RCGC2_GPIOE
                               EQU              0x00000010  ; port E Clock Gati
                                                            ng Control
   29 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 40024510 
                       GPIO_PORTE_PUR_R
                               EQU              0x40024510
   34 00000000 4002451C 
                       GPIO_PORTE_DEN_R



ARM Macro Assembler    Page 2 


                               EQU              0x4002451C
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   39 00000000 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   40 00000000 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   41 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   42 00000000 4002452C 
                       GPIO_PORTE_PCTL_R
                               EQU              0x4002452C
   43 00000000 40025520 
                       GPIO_PORTE_LOCK_R
                               EQU              0x40025520
   44 00000000 40025524 
                       GPIO_PORTE_CR_R
                               EQU              0x40025524
   45 00000000 40024528 
                       GPIO_PORTE_AMSEL_R
                               EQU              0x40024528
   46 00000000                 THUMB
   47 00000000                 AREA             DATA, ALIGN=4
   48 00000000 00000032 
                       SIZE    EQU              50
   49 00000000         ;You MUST use these two buffers and two variables
   50 00000000         ;You MUST not change their names
   51 00000000         ;These names MUST be exported
   52 00000000                 EXPORT           DataBuffer
   53 00000000                 EXPORT           TimeBuffer
   54 00000000                 EXPORT           DataPt [DATA,SIZE=4]
   55 00000000                 EXPORT           TimePt [DATA,SIZE=4]
   56 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            SIZE*4
   57 000000C8 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            SIZE*4
   58 00000190 00 00 00 
              00       DataPt  SPACE            4
   59 00000194 00 00 00 
              00       TimePt  SPACE            4
   60 00000198         
   61 00000198         
   62 00000198                 ALIGN
   63 00000198                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   64 00000000                 THUMB
   65 00000000                 EXPORT           Start
   66 00000000                 IMPORT           TExaS_Init
   67 00000000         
   68 00000000         
   69 00000000 F7FF FFFE 
                       Start   BL               TExaS_Init  ; running at 80 MHz
                                                            , scope voltmeter o
                                                            n PD3
   70 00000004         ; initialize Port E
   71 00000004 494F            LDR              R1, =SYSCTL_RCGCGPIO_R 
                                                            ;activate clock
   72 00000006 6808            LDR              R0, [R1]
   73 00000008 F040 0030       ORR              R0, R0, #0x30 ;set bit 4 to tur
                                                            n on clock
   74 0000000C 6008            STR              R0, [R1]    ;put it back
   75 0000000E BF00            NOP                          ;wait for stabiliza
                                                            tion,
   76 00000010 BF00            NOP
   77 00000012 494D            LDR              R1, =GPIO_PORTE_LOCK_R ;unlock 
                                                            the lock register
   78 00000014 484D            LDR              R0, =0x4C4F434B ;unlock GPIO Po
                                                            rt E Commit Registe
                                                            r
   79 00000016 6008            STR              R0, [R1]
   80 00000018 494D            LDR              R1, =GPIO_PORTE_CR_R ;enable co
                                                            mmit for Port E
   81 0000001A F04F 00FF       MOV              R0, #0xFF   ;1 means allow acce
                                                            ss
   82 0000001E 6008            STR              R0, [R1]
   83 00000020 494C            LDR              R1, =GPIO_PORTE_AMSEL_R ;disabl
                                                            e analog functional
                                                            ity
   84 00000022 6808            LDR              R0, [R1]
   85 00000024 F020 0003       BIC              R0, #0x03   ;Clear bits 1 and 0
                                                            
   86 00000028 6008            STR              R0, [R1]
   87 0000002A 494B            LDR              R1, =GPIO_PORTE_PCTL_R 
                                                            ;configure as GPIO
   88 0000002C 6808            LDR              R0, [R1]
   89 0000002E F020 0014       BIC              R0, #0x14   ;0 means configure 
                                                            Port E as GPIO
   90 00000032 6008            STR              R0, [R1]
   91 00000034 4949            LDR              R1, =GPIO_PORTE_DIR_R ;set dire
                                                            ction register
   92 00000036 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 6 


   93 00000038 F040 0002       ORR              R0,#0x02    ;PORTE bit 1 is set
                                                             to 1
   94 0000003C F020 0001       BIC              R0,#0x01    ;clear bit 0
   95 00000040 6008            STR              R0, [R1]
   96 00000042 4947            LDR              R1, =GPIO_PORTE_AFSEL_R ;disabl
                                                            e alternate functio
                                                            n select
   97 00000044 6808            LDR              R0, [R1]
   98 00000046 F020 0014       BIC              R0, #0x14   ;We don't need the 
                                                            pins' special funct
                                                            ions so we set it t
                                                            o 0
   99 0000004A 6008            STR              R0, [R1]
  100 0000004C 4945            LDR              R1, =GPIO_PORTE_DEN_R ;Set DEN 
                                                            so that the bits ar
                                                            e useable, Port E d
                                                            igital port
  101 0000004E 6808            LDR              R0, [R1]
  102 00000050 F040 0003       ORR              R0, #0x03
  103 00000054 6008            STR              R0, [R1]
  104 00000056 4944            LDR              R1, =GPIO_PORTE_DATA_R
  105 00000058 6808            LDR              R0, [R1]
  106 0000005A F040 0002       ORR              R0, #0x02   ;starting the progr
                                                            am with the LED on
  107 0000005E 6008            STR              R0, [R1]
  108 00000060 F005 0500       AND              R5, R5, #0  ;clearing register 
                                                            5, to be used as co
                                                            unter for delay
  109 00000064         ; initialize Port F
  110 00000064 4941            LDR              R1, =GPIO_PORTF_DIR_R ;set dire
                                                            ction register
  111 00000066 6808            LDR              R0, [R1]
  112 00000068 F040 0002       ORR              R0,#0x02    ;PORTF bit 1 is set
                                                             to 1
  113 0000006C F020 0001       BIC              R0,#0x01    ;clear bit 0
  114 00000070 6008            STR              R0, [R1]
  115 00000072 493F            LDR              R1, =GPIO_PORTF_AFSEL_R ;disabl
                                                            e alternate functio
                                                            n select
  116 00000074 6808            LDR              R0, [R1]
  117 00000076 F020 0014       BIC              R0, #0x14   ;We don't need the 
                                                            pins' special funct
                                                            ions so we set it t
                                                            o 0
  118 0000007A 6008            STR              R0, [R1]
  119 0000007C 493D            LDR              R1, =GPIO_PORTF_DEN_R ;Set DEN 
                                                            so that the bits ar
                                                            e useable, Port E d
                                                            igital port
  120 0000007E 6808            LDR              R0, [R1]
  121 00000080 F040 0003       ORR              R0, #0x03
  122 00000084 6008            STR              R0, [R1]
  123 00000086 493C            LDR              R1, =GPIO_PORTF_DATA_R
  124 00000088         ; initialize debugging dump, including SysTick
  125 00000088         
  126 00000088         
  127 00000088 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts



ARM Macro Assembler    Page 7 


  128 0000008A F000 F839 
                       loop    BL               Debug_Capture
  129 0000008E F205 35FA       ADD              R5, #1018   ;set R5 to 3250
  130 00000092 FB05 F505       MUL              R5, R5
  131 00000096         delay                                ;delay function
  132 00000096 F105 35FF       ADD              R5, #-1     ;subtract one from 
                                                            R5
  133 0000009A 2D00            CMP              R5, #0      ;if R5 greater than
                                                             zero, branch to de
                                                            lay
  134 0000009C DCFB            BGT              delay       ;if R5 is equal to 
                                                            zero, proceed
  135 0000009E         
  136 0000009E 4A32            LDR              R2, =GPIO_PORTE_DATA_R
  137 000000A0 4E31            LDR              R6, =GPIO_PORTE_DATA_R
  138 000000A2         
  139 000000A2 6836            LDR              R6, [R6]    ;load data from Por
                                                            t E
  140 000000A4         
  141 000000A4 F006 0601       AND              R6, #0x01   ;masking for bit 0
  142 000000A8 2E01            CMP              R6, #0x01   ;check and see is b
                                                            it 0 is "1" (switch
                                                             not pressed)
  143 000000AA D107            BNE              turnon      ;if switch is not p
                                                            ressed, take the br
                                                            anch
  144 000000AC 4E2E            LDR              R6, =GPIO_PORTE_DATA_R
  145 000000AE 6836            LDR              R6, [R6]    ;load data from Por
                                                            t E
  146 000000B0 F006 0602       AND              R6, #0x02   ;masking for bit 1
  147 000000B4 F086 0602       EOR              R6, R6, #0x2 ;NOT bit 1
  148 000000B8 6016            STR              R6, [R2]    ;store result back 
                                                            to Port E
  149 000000BA E7E6            B                loop        ;Branch back to beg
                                                            inning of loop
  150 000000BC         turnon                               ;turning or keeping
                                                             the LED on
  151 000000BC 492A            LDR              R1, =GPIO_PORTE_DATA_R
  152 000000BE 4A2A            LDR              R2, =GPIO_PORTE_DATA_R
  153 000000C0 6809            LDR              R1, [R1]    ;load data from Por
                                                            t E
  154 000000C2 F041 0102       ORR              R1, #0x02   ;set bit 1 to "1"
  155 000000C6 6011            STR              R1, [R2]    ;store result back 
                                                            to Port E
  156 000000C8         ;end subroutine
  157 000000C8         ;heartbeat
  158 000000C8         ; Delay
  159 000000C8         ;input PE0 test output PE1
  160 000000C8 E7DF            B                loop
  161 000000CA         
  162 000000CA         
  163 000000CA         ;------------Debug_Init------------
  164 000000CA         ; Initializes the debugging instrument
  165 000000CA         ; Input: none
  166 000000CA         ; Output: none
  167 000000CA         ; Modifies: none
  168 000000CA         ; Note: push/pop an even number of registers so C compil
                       er is happy
  169 000000CA         Debug_Init



ARM Macro Assembler    Page 8 


  170 000000CA         
  171 000000CA         ; init SysTick
  172 000000CA 492C            LDR              R1, =NVIC_ST_CTRL_R
  173 000000CC F04F 0000       MOV              R0, #0
  174 000000D0 6008            STR              R0, [R1]
  175 000000D2 492B            LDR              R1, =NVIC_ST_RELOAD_R
  176 000000D4 482B            LDR              R0, =0x00FFFFFF
  177 000000D6 6008            STR              R0, [R1]
  178 000000D8 4928            LDR              R1, =NVIC_ST_CTRL_R
  179 000000DA F04F 0005       MOV              R0, #0x05
  180 000000DE 6008            STR              R0, [R1]
  181 000000E0        0 
                       i       RN               0
  182 000000E0        1 
                       Array   RN               1
  183 000000E0 F04F 0000       MOV              i, #0
  184 000000E4 F04F 020F       MOV              R2, #0xF
  185 000000E8 500A    loop2   STR              R2, [Array,i]
  186 000000EA F100 0002       ADD              i, #2
  187 000000EE 2814            CMP              i, #20
  188 000000F0 D3FA            BLO              loop2
  189 000000F2 4925            LDR              R1, =DataBuffer
  190 000000F4 4825            LDR              R0, =DataPt
  191 000000F6 6001            STR              R1, [R0]
  192 000000F8 4925            LDR              R1, =TimeBuffer
  193 000000FA 4826            LDR              R0, =TimePt
  194 000000FC 6001            STR              R1, [R0]
  195 000000FE 4770            BX               LR
  196 00000100         
  197 00000100         ;------------Debug_Capture------------
  198 00000100         ; Dump Port E and time into buffers
  199 00000100         ; Input: none
  200 00000100         ; Output: none
  201 00000100         ; Modifies: none
  202 00000100         ; Note: push/pop an even number of registers so C compil
                       er is happy
  203 00000100         Debug_Capture
  204 00000100 B570            PUSH             {R4, R5, R6, LR}
  205 00000102 4819            LDR              R0, =GPIO_PORTE_DATA_R
  206 00000104 491D            LDR              R1, =NVIC_ST_CTRL_R
  207 00000106 6802            LDR              R2, [R0]
  208 00000108 6803            LDR              R3, [R0]
  209 0000010A F002 0201       AND              R2, #0x01
  210 0000010E F003 0302       AND              R3, #0x02
  211 00000112 EA4F 0353       LSR              R3, #1
  212 00000116 EA4F 1202       LSL              R2, #4
  213 0000011A 441A            ADD              R2, R2, R3  ; masking stuff end
                                                            s here
  214 0000011C 4C1B            LDR              R4, = DataPt
  215 0000011E 4E1A            LDR              R6, = DataBuffer
  216 00000120 6825            LDR              R5, [R4]
  217 00000122 2D32            CMP              R5, #SIZE
  218 00000124 D20A            BHS              done        ; full?
  219 00000126 5172            STR              R2, [R6,R5]
  220 00000128 F105 0501       ADD              R5, #1
  221 0000012C 6025            STR              R5, [R4]
  222 0000012E 4C19            LDR              R4, = TimePt
  223 00000130 4D17            LDR              R5, = TimeBuffer
  224 00000132 6826            LDR              R6, [R4]



ARM Macro Assembler    Page 9 


  225 00000134 51A9            STR              R1, [R5,R6]
  226 00000136 F106 0601       ADD              R6, #1
  227 0000013A 6026            STR              R6, [R4]
  228 0000013C E8BD 4070 
                       done    POP              {R4, R5, R6, LR}
  229 00000140 4770            BX               LR
  230 00000142         
  231 00000142         
  232 00000142 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  233 00000144                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40024528 
              4002452C 
              40024400 
              40024420 
              4002451C 
              400243FC 
              40025400 
              40025420 
              4002551C 
              400253FC 
              E000E010 
              E000E014 
              00FFFFFF 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__RTX SETA 1" --predefine="__EVAL SETA 1" --list=.\main
.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 56 in file main.s
   Uses
      At line 52 in file main.s
      At line 189 in file main.s
      At line 215 in file main.s

DataPt 00000190

Symbol: DataPt
   Definitions
      At line 58 in file main.s
   Uses
      At line 54 in file main.s
      At line 190 in file main.s
      At line 214 in file main.s

TimeBuffer 000000C8

Symbol: TimeBuffer
   Definitions
      At line 57 in file main.s
   Uses
      At line 53 in file main.s
      At line 192 in file main.s
      At line 223 in file main.s

TimePt 00000194

Symbol: TimePt
   Definitions
      At line 59 in file main.s
   Uses
      At line 55 in file main.s
      At line 193 in file main.s
      At line 222 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 63 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 00000100

Symbol: Debug_Capture
   Definitions
      At line 203 in file main.s
   Uses
      At line 128 in file main.s
Comment: Debug_Capture used once
Debug_Init 000000CA

Symbol: Debug_Init
   Definitions
      At line 169 in file main.s
   Uses
      None
Comment: Debug_Init unused
Start 00000000

Symbol: Start
   Definitions
      At line 69 in file main.s
   Uses
      At line 65 in file main.s
Comment: Start used once
delay 00000096

Symbol: delay
   Definitions
      At line 131 in file main.s
   Uses
      At line 134 in file main.s
Comment: delay used once
done 0000013C

Symbol: done
   Definitions
      At line 228 in file main.s
   Uses
      At line 218 in file main.s
Comment: done used once
loop 0000008A

Symbol: loop
   Definitions
      At line 128 in file main.s
   Uses
      At line 149 in file main.s
      At line 160 in file main.s

loop2 000000E8




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: loop2
   Definitions
      At line 185 in file main.s
   Uses
      At line 188 in file main.s
Comment: loop2 used once
turnon 000000BC

Symbol: turnon
   Definitions
      At line 150 in file main.s
   Uses
      At line 143 in file main.s
Comment: turnon used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_AMSEL_R 40024528

Symbol: GPIO_PORTE_AMSEL_R
   Definitions
      At line 45 in file main.s
   Uses
      At line 83 in file main.s
Comment: GPIO_PORTE_AMSEL_R used once
GPIO_PORTE_CR_R 40025524

Symbol: GPIO_PORTE_CR_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 80 in file main.s
Comment: GPIO_PORTE_CR_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 104 in file main.s
      At line 136 in file main.s
      At line 137 in file main.s
      At line 144 in file main.s
      At line 151 in file main.s
      At line 152 in file main.s
      At line 205 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 100 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 91 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_LOCK_R 40025520

Symbol: GPIO_PORTE_LOCK_R
   Definitions
      At line 43 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 77 in file main.s
Comment: GPIO_PORTE_LOCK_R used once
GPIO_PORTE_PCTL_R 4002452C

Symbol: GPIO_PORTE_PCTL_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 87 in file main.s
Comment: GPIO_PORTE_PCTL_R used once
GPIO_PORTE_PUR_R 40024510

Symbol: GPIO_PORTE_PUR_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PUR_R unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 115 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 123 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 119 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 110 in file main.s
Comment: GPIO_PORTF_DIR_R used once
LED 40024008

Symbol: LED
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: LED unused



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 172 in file main.s
      At line 178 in file main.s
      At line 206 in file main.s

NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: NVIC_ST_CURRENT_R unused
NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 175 in file main.s
Comment: NVIC_ST_RELOAD_R used once
SIZE 00000032

Symbol: SIZE
   Definitions
      At line 48 in file main.s
   Uses
      At line 56 in file main.s
      At line 57 in file main.s
      At line 217 in file main.s

SWITCH 40024004

Symbol: SWITCH
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: SWITCH unused
SYSCTL_RCGC2_GPIOE 00000010

Symbol: SYSCTL_RCGC2_GPIOE
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOE unused
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 29 in file main.s
   Uses
      None



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: SYSCTL_RCGC2_GPIOF unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 71 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 66 in file main.s
   Uses
      At line 69 in file main.s
Comment: TExaS_Init used once
1 symbol
373 symbols in table
